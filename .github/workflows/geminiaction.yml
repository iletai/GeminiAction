name: Example Using Gemini action
# This workflow represents a set of basic End-to-End tests
on:
  # push:
  #   branches:
  #     - 'develop'
  # pull_request:
  # workflow_dispatch:

  issues:
    types: [opened, edited]

jobs:
  example_gemini:
    name: Example Usable
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install NPM dependencies
        run: npm i @google/generative-ai

      - name: Install NPM dependencies
        run: npm i @google-cloud/vertexai

      - name: Using Scripts
        id: scriptgemini
        uses: actions/github-script@v7
        env:
          gemini-api-key: ${{ secrets.GEMINI_API_KEY }}
        with:
          script: |
            const { VertexAI } = require("@google-cloud/vertexai");
            const { GenerativeModel } = require("@google/generative-ai");
            const body = context.payload.issue.body;
            # Using Gemini API Model with Env scerets API Key Gemini
            const model = new GenerativeModel({ apiKey: process.env.gemini-api-key }, {
              model: "gemini-pro",
              generationConfig: { temperature: 0 },
            });
            const response = await model.generate(body);
            console.log(response);
      - name: GeminiAction
        uses: iletai/GeminiAction@develop
        with:
          gemini-api-key: ${{ secrets.GEMINI_API_KEY }}
