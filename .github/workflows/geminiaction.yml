name: Example Using Gemini action
# This workflow represents a set of basic End-to-End tests
on:
  # push:
  #   branches:
  #     - 'develop'
  # pull_request:
  # workflow_dispatch:

  issues:
    types: [opened, edited]

jobs:
  example_gemini:
    name: Example Usable
    runs-on: macos-latest
    steps:
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - name: Cache yarn dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Cache npm dependencies
        uses: actions/cache@v4
        with:
          path: '~/.npm'
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
 
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - name: Install NPM dependencies
        run: npm i @google/generative-ai

      - name: Using Scripts
        id: scriptgemini
        uses: actions/github-script@v7
        continue-on-error: true
        env:
          APIKEY: ${{ secrets.GEMINI_API_KEY }}
        with:
          script: |
            const modelName = "gemini-pro";
            const { GenerativeModel } = require("@google/generative-ai");
            const body = context.payload.issue.body;
            const model = new GenerativeModel(process.env.APIKEY, modelName, { temperature: 0 });
            console.log(body);
            const result = await model.generateContent(body);
            const response = await result.response;
            console.log(response.text());
      # - run: echo ${{ steps.scriptgemini.outputs.result }}
      # - name: GeminiAction
      #   uses: iletai/GeminiAction@develop
      #   with:
      #     gemini-api-key: ${{ secrets.GEMINI_API_KEY }}
